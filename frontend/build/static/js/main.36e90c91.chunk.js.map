{"version":3,"sources":["components/SubmitButton.js","components/LoginForm.js","components/RegisterForm.js","components/Comments.js","components/Feed.js","GlobalFunctions.js","components/PostForm.js","components/FollowFinder.js","components/LogoutForm.js","components/Navbar.js","components/ProtectedRoute.js","App.js","index.js"],"names":["SubmitButton","className","this","props","classes","type","disabled","onClick","text","React","Component","LoginForm","onChange","e","setState","target","name","value","onSubmit","preventDefault","postData","JSON","stringify","state","fetch","method","body","headers","then","response","json","data","success","history","push","ErrorsList","errors","map","error","rootElement","document","getElementById","ReactDOM","render","catch","console","log","username","password","placeholder","to","id","RegisterForm","password2","Comments","Post","caption","image","index","Avatar","alt","src","Feed","activeItem","completed","editing","fetchPosts","bind","posts","Grid","container","direction","justify","alignItems","post","getCookie","cookieValue","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","PostForm","useState","setImage","isUploaded","setIsUploaded","setCaption","useHistory","formData","FormData","append","csrftoken","Object","fromEntries","draggable","htmlFor","style","width","accept","files","reader","FileReader","onload","result","readAsDataURL","FollowNode","isDisabled","setIsDisabled","setText","setClasses","concat","classList","remove","FollowFinder","followUserData","fetchFollowUsers","users","LogoutForm","submitLogout","Navbar","location","useLocation","useLayoutEffect","callback","setIsAuthenticated","user","auth","isAuthenticated","ProtectedRoute","nextProps","nextContext","redirect","App","wrapperSetIsAuthenticated","useCallback","path","component","StrictMode"],"mappings":"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","file":"static/js/main.36e90c91.chunk.js","sourcesContent":["import React from 'react'\n\nclass SubmitButton extends React.Component {\n\n    render() {\n        return(\n            <div className={this.props.classes}>\n                <button\n                    className='btn'\n                    type={this.props.type}\n                    disabled={this.props.disabled}\n                    onClick={this.props.onClick}>\n                    {this.props.text}\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default SubmitButton;","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport SubmitButton from \"./SubmitButton\";\nimport {Link} from 'react-router-dom'\n\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        // By using states we can associate the name property of the <input> with the state variable and we can initialize values\n        this.state = ({username: '', password: ''})\n    }\n\n    onChange = (e) => {\n        // If using states to handle, this line will index the state variable with the same name as the calling-event's\n        // (the calling input field's) name property and update the state's value to the <input>'s new value\n        this.setState({[e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        // Since using states means `this.state` holds the current state of each input field, we can simply convert to JSON and its ready for POST\n        const postData = JSON.stringify(this.state);\n\n        /*\n        // If using the FormData instead, it will only take what is currently the value of the <input>, and not its state\n        const formData = new FormData(e.target);\n        // You can see here that this successfully gets/prints the JSON formatted form. However, if you were to try to\n        // set the state in the constructor initially and submit the form before writing any values in the fields,\n        // the output will be all empty fields (ex: {\"username\": \"\",....}) although username's state is 'some initial value'\n        console.log(JSON.stringify(Object.fromEntries(formData)));\n        */\n\n        fetch('/api/login/', {\n            method: 'POST',\n            body: postData,\n            headers: {'content-type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === 'true') {\n                    return this.props.history.push('/feed')\n                }\n                const ErrorsList = () => (\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\n                );\n                const rootElement = document.getElementById(\"post-response-errors\");\n                ReactDOM.render(<ErrorsList />, rootElement);\n            })\n            .catch(error => console.log(error))\n    }\n\n    render() {\n        return(\n            // The name property of every field needs to be the same as the state so that the relation is established\n            <form\n                onSubmit={this.onSubmit}\n                className=\"auth-form input\">\n                Login\n                <input\n                    name='username'\n                    type='text'\n                    placeholder='Username'\n                    onChange={this.onChange}\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    onChange={this.onChange}\n                />\n                <SubmitButton\n                    type='submit'\n                    classes='submit-button-padding'\n                    text='Login'\n                />\n                <Link to =\"/register\">\n                <SubmitButton\n                    type='submit'\n                    classes='submit-button-padding'\n                    text='Register'\n                />\n                </Link>\n                <div id=\"post-response-errors\"/>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport SubmitButton from \"./SubmitButton\";\n\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        // By using states we can associate the name property of the <input> with the state variable and we can initialize values\n        this.state = ({username: '', password: '', password2: ''})\n    }\n\n    onChange = (e) => {\n        // If using states to handle, this line will index the state variable with the same name as the calling-event's\n        // (the calling input field's) name property and update the state's value to the <input>'s new value\n        this.setState({[e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        // Since using states means `this.state` holds the current state of each input field, we can simply convert to JSON and its ready for POST\n        const postData = JSON.stringify(this.state);\n\n        /*\n        // If using the FormData instead, it will only take what is currently the value of the <input>, and not its state\n        const formData = new FormData(e.target);\n        // You can see here that this successfully gets/prints the JSON formatted form. However, if you were to try to\n        // set the state in the constructor initially and submit the form before writing any values in the fields,\n        // the output will be all empty fields (ex: {\"username\": \"\",....}) although username's state is 'some initial value'\n        console.log(JSON.stringify(Object.fromEntries(formData)));\n        */\n\n        fetch('/api/register/', {\n            method: 'POST',\n            body: postData,\n            headers: {'content-type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === 'true') {\n                    return this.props.history.push('/feed')\n                }\n                const ErrorsList = () => (\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\n                );\n                const rootElement = document.getElementById(\"post-response-errors\");\n                ReactDOM.render(<ErrorsList />, rootElement);\n            })\n            .catch(error => console.log(error))\n    }\n\n    render() {\n        return(\n            // The name property of every field needs to be the same as the state so that the relation is established\n            <form\n                onSubmit={this.onSubmit}\n                className=\"auth-form input\">\n                Sign up\n                <input\n                    name='username'\n                    type='text'\n                    placeholder='Username'\n                    onChange={this.onChange}\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    onChange={this.onChange}\n                />\n                <input\n                    name='password2'\n                    type='password'\n                    placeholder='Repeat Password'\n                    onChange={this.onChange}\n                />\n                <SubmitButton\n                    type='submit'\n                    classes='submit-button-padding'\n                    text='Register'\n                />\n                <div id=\"post-response-errors\"/>\n            </form>\n        )\n    }\n}\n\nexport default RegisterForm;","import React from \"react\";\nimport '../App.css';\n\nclass Comments extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className='comments-overlay'>\n                <p>Hello.</p>\n            </div>\n        )\n    }\n}\n\nexport default Comments;","import React, {Component,} from 'react';\nimport {Avatar, Grid} from \"@material-ui/core\";\nimport Comments from './Comments'\nimport '../App.css';\n\n\nclass Feed extends Component {\n\n    constructor(props) {\n        super(props);\n        // this.state = ({username: '', image: '', caption: ''})\n        this.state = {\n            postData: [],\n            activeItem: {\n\n                //Check what completed,editing fields do\n                id: null,\n                username: '',\n                image: '',\n                caption: '',\n                completed: false,\n            },\n            editing: false,\n        }\n        this.fetchPosts = this.fetchPosts.bind(this);\n    };\n\n    fetchPosts() {\n        fetch('/api/feed/', {\n            method: 'GET',\n            headers: {'content-type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data =>\n                this.setState({postData: data,})\n            )\n    }\n\n    componentDidMount() {\n        this.fetchPosts()\n    }\n\n    render() {\n        const posts = this.state.postData\n        return (\n            <Grid\n                id=\"feed-grid\"\n                container\n                direction=\"column\"\n                justify=\"space-between\"\n                alignItems=\"center\">\n\n                {posts.map(function (post, index) {\n                    return (\n                        <Post username={post.username} caption={post.caption}\n                              image={post.image} key={index}/>\n                    )\n                })\n                }\n            </Grid>\n        )\n    }\n}\n\nfunction Post({username, caption, image, index}) {\n\n    return (\n        <div className=\"post-card\" key={index}>\n            <div className=\"post-header\">\n                <Avatar\n                    className=\"post-avatar\"\n                    alt={username}\n                    src=\"\"\n                />\n                <p className=\"post-username\">{username}</p>\n            </div>\n            <div className='img-comments-container'>\n                <Comments />\n                <img className=\"post-image\" src={image} alt=\"\" />\n            </div>\n            <p className=\"post-text\"><strong>{username}:</strong> {caption}</p>\n        </div>\n    )\n}\n\nexport default Feed;\n\n\n","export function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport const getIsAuthenticated = function (callback) {\n     fetch('/api/getauth/', {\n        method: 'GET',\n        headers: {'content-type': 'application/json'}\n    })\n        .then(response => response.json())\n        .then(data => {\n            callback(!(data.user === \"AnonymousUser\" && data.auth === \"None\"));\n        })\n        .catch(error => console.log(error))\n}","import React, {useState} from 'react'\nimport ReactDOM from \"react-dom\";\nimport {getCookie} from '../GlobalFunctions'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction PostForm() {\n    const [image, setImage] = useState(\"\");\n    const [isUploaded, setIsUploaded] = useState(false);\n    const [caption, setCaption] = useState(\"\");\n\n    function handleImageChange(e) {\n        if (e.target.files && e.target.files[0]) {\n            let reader = new FileReader();\n\n            reader.onload = function (e) {\n                setImage(e.target.result);\n                setIsUploaded(true);\n            };\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    }\n\n    function handleCaptionChange(e) {\n        setCaption(e.target.value);\n    }\n\n    // Because this is a functional component, the props are not initially available as in other components (ex: LoginForm),\n    // so we set the history using 'react-router-dom's useHistory() and then push using that object in the .then() promise\n    let history = useHistory();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('caption', caption);\n\n        const csrftoken = getCookie('csrftoken')\n\n        fetch(\n            '/api/post/', {\n                method: 'POST',\n                body: JSON.stringify(Object.fromEntries(formData)),\n                headers: {\n                    'content-type': 'application/json',\n                    'X-CSRFToken': csrftoken,\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === 'true') {\n                    return history.push('/feed');\n                }\n                const ErrorsList = () => (\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\n                );\n                const rootElement = document.getElementById(\"post-response-errors\");\n                ReactDOM.render(<ErrorsList />, rootElement);\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className={'post-form-main'}>\n            <h3>Make a Post</h3>\n            <div className={'box-upload'}>\n                {!isUploaded ?\n                    (<>\n                        <label className={'img-label'} htmlFor=\"upload-input\">\n                            <img style={{width: 100}} draggable={false}\n                                 src='https://wayou.gallerycdn.vsassets.io/extensions/wayou/vscode-icons-mac/7.25.3/1564717968649/Microsoft.VisualStudio.Services.Icons.Default'\n                                 alt=\"Folder Icon\"/>\n                            <p id={'sub'}>\n                                Click to upload image\n                            </p>\n                        </label>\n                        <input\n                            className={'img-input'}\n                            id=\"upload-input\"\n                            type=\"file\"\n                            accept=\".jpg, .img, .png\"\n                            onChange={handleImageChange}\n                        />\n                    </>) : (\n                        <div className={'image-preview'}>\n                            <img className='close-icon'\n                                 src='https://cdn.iconscout.com/icon/free/png-256/close-1781207-1518581.png'\n                                 alt=\"Close Icon\"\n                                 onClick={() => {\n                                     setIsUploaded(false);\n                                     setImage(null);\n                                 }}\n                            />\n                            <img id=\"uploaded-image\"\n                                 src={image}\n                                 alt=\"Feed Post\"\n                                 draggable={false}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n            <div className={'text-area'}>\n                <textarea value={caption} onChange={handleCaptionChange} type=\"text\" name=\"caption\"\n                          className={'description-input'} placeholder='Description'/>\n            </div>\n            <input className={'post-btn'} type=\"submit\" value=\"Post\"/>\n            <div id={\"post-response-errors\"}/>\n        </form>\n    )\n}\n\nexport default PostForm","import React, {useState} from 'react'\nimport {getCookie} from \"../GlobalFunctions\";\nimport ReactDOM from \"react-dom\";\n\n\nclass FollowFinder extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {followUserData: []};\n        this.fetchFollowUsers = this.fetchFollowUsers.bind(this);\n    }\n\n    fetchFollowUsers() {\n        fetch('/api/follow/', {\n            method: 'GET',\n            headers: {'content-type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data =>\n                this.setState({followUserData: data,})\n            )\n    }\n\n    componentDidMount() {\n        this.fetchFollowUsers()\n    }\n\n    render() {\n        const users = this.state.followUserData\n        return (\n            <div className='user-grid'>\n                {users.map((data, index) =>\n                    <FollowNode username={data.username}/>)\n                }\n                <div id='post-response-errors' className='display-none' />\n            </div>\n        )\n    }\n}\n\nfunction FollowNode({username}) {\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [text, setText] = useState(\"Follow\");\n    const [classes, setClasses] = useState('follow-node');\n\n    function handleClick() {\n\n        const csrftoken = getCookie('csrftoken')\n\n        const formData = new FormData();\n        formData.append('user_to_follow', username);\n\n        fetch(\n            '/api/follow/', {\n                method: 'POST',\n                body: JSON.stringify(Object.fromEntries(formData)),\n                headers: {\n                    'content-type': 'application/json',\n                    'X-CSRFToken': csrftoken,\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === 'true') {\n                    setIsDisabled(true);\n                    setText(\"Following!\");\n                    setClasses(classes.concat(' follow-node-clicked'))\n                    return;\n                }\n                const ErrorsList = () => (\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\n                );\n                const rootElement = document.getElementById('post-response-errors');\n                rootElement.classList.remove('display-none');\n                ReactDOM.render(<ErrorsList />, rootElement);\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <div className={classes}>\n            <p>{username}</p>\n            <button\n                onClick={handleClick} disabled={isDisabled}\n                className={'follow-button'}>{text}\n            </button>\n        </div>\n    )\n}\n\nexport default FollowFinder;\n","import React from 'react';\nimport SubmitButton from './SubmitButton';\nimport {getCookie} from \"../GlobalFunctions\";\nimport {useHistory} from 'react-router-dom';\n\n\nfunction LogoutForm() {\n\n    let history = useHistory();\n\n    function submitLogout(e) {\n\n        const csrftoken = getCookie('csrftoken')\n\n        fetch('/api/logout/', {\n                method: 'POST',\n                body: '',\n                headers: {\n                    'content-type': 'application/json',\n                    'X-CSRFToken': csrftoken,\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                if (data.success === 'true') {\n                    return history.push('/login');\n                } else {\n                    return history.push('/feed');\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <SubmitButton onClick={() => submitLogout()} text=\"Logout\"/>\n    )\n}\n\nexport default LogoutForm","import React, {useLayoutEffect} from 'react';\nimport SubmitButton from './SubmitButton';\nimport LogoutForm from './LogoutForm';\nimport {Link, useLocation} from 'react-router-dom';\nimport {getIsAuthenticated} from \"../GlobalFunctions\";\n\n\nfunction Navbar(props) {\n\n    const location = useLocation()\n\n    useLayoutEffect(() => {\n        getIsAuthenticated((data => {\n            props.setIsAuthenticated(data);\n        }));\n    }, [location, props]);\n\n    return (\n        <div className=\"navbar-container\">\n            <div className=\"navbar\">\n                <Link to=\"/feed\" className=\"logo mr-auto\">\n                    SnowFlake\n                </Link>\n                {props.isAuthenticated ? (\n                    <div className=\"user-status ml-auto\">\n                        <Link to=\"/post\">\n                            <SubmitButton text='New Post'/>\n                        </Link>\n                        <Link to=\"/follow\">\n                            <SubmitButton text='Follow Finder'/>\n                        </Link>\n                        <LogoutForm/>\n                    </div>\n                ) : (\n                    <div className=\"user-status ml-auto\">\n                        <Link to=\"/login\">\n                            <SubmitButton text='Login'/>\n                        </Link>\n                        <Link to=\"/register\">\n                            <SubmitButton text='Register'/>\n                        </Link>\n                    </div>\n                )\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\n\nclass ProtectedRoute extends React.Component {\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\n            this.setState({isAuthenticated: nextProps.isAuthenticated});\n        }\n    }\n\n    render() {\n        const {isAuthenticated, redirect, ...props} = this.props;\n        return (\n            isAuthenticated ?\n                <Route\n                    {...props}\n                /> :\n                <Redirect to={redirect}/>\n        )\n    }\n}\n\nexport default ProtectedRoute;","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport Feed from './components/Feed';\nimport PostForm from './components/PostForm';\nimport FollowFinder from './components/FollowFinder';\nimport Navbar from './components/Navbar';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\n\n\nfunction App() {\n\n    const [isAuthenticated, setIsAuthenticated] = useState(true);\n\n    const wrapperSetIsAuthenticated = useCallback(auth => {\n        setIsAuthenticated(auth);\n    }, [setIsAuthenticated, ]);\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <Navbar isAuthenticated={isAuthenticated} setIsAuthenticated={wrapperSetIsAuthenticated}/>\n                <div className=\"container\">\n                    <Switch>\n                        <ProtectedRoute path=\"/login\" component={LoginForm} isAuthenticated={!isAuthenticated} redirect={'/feed'} />\n                        <ProtectedRoute path=\"/register\" component={RegisterForm} isAuthenticated={!isAuthenticated} redirect={'/feed'} />\n                        <ProtectedRoute path=\"/feed\" component={Feed} isAuthenticated={isAuthenticated} redirect={'/login'} />\n                        <ProtectedRoute path=\"/post\" component={PostForm} isAuthenticated={isAuthenticated} redirect={'/login'}  />\n                        <ProtectedRoute path=\"/follow\" component={FollowFinder} isAuthenticated={isAuthenticated} redirect={'/login'}  />\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}