{"version":3,"sources":["components/SubmitButton.js","components/LoginForm.js","components/RegisterForm.js","GlobalFunctions.js","components/Comments.js","components/Reports.js","components/Feed.js","components/ReportsAdmin.js","components/ReportFeed.js","components/PostForm.js","components/FollowFinder.js","components/LogoutForm.js","components/Navbar.js","components/ProtectedRoute.js","App.js","index.js"],"names":["SubmitButton","className","this","props","classes","type","disabled","onClick","text","React","Component","LoginForm","onChange","e","setState","target","name","value","onSubmit","preventDefault","postData","JSON","stringify","state","fetch","method","body","headers","then","response","json","data","success","history","push","ErrorsList","errors","map","error","rootElement","document","getElementById","ReactDOM","render","catch","console","log","username","password","placeholder","to","id","RegisterForm","password2","getCookie","cookieValue","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Comment","comment","Avatar","alt","src","Comments","handleNewCommentChange","newComment","handleSubmit","formData","FormData","append","csrftoken","Object","fromEntries","commentsContainer","comments","updatedComments","content","image","icon","faTimes","handleDisableShowComments","Reports","handleNewReportChange","newReport","caption","handleDisableShowReport","Post","handleEnableShowComments","handleEnableShowReport","index","faExclamationCircle","faComments","Feed","enableShowCommentsModal","postId","postUsername","postImage","commentData","newCommentsModalState","commentsModalState","showCommentsModal","disableShowCommentsModal","enableShowReportModal","postCaption","newReportModalState","reportModalState","showReportModal","disableShowReportModal","bind","fetchPosts","posts","Grid","container","direction","justify","alignItems","post","isOpen","contentLabel","shouldCloseOnOverlayClick","shoudCloseOnEsc","onRequestClose","Report","report","handleDismissReport","ReportsAdmin","deletePost","dismissReport","reports","handleEnableShowReports","ReportFeed","enableShowReportsModal","reportData","newReportsModalState","reportsModalState","showReportsModal","disableShowReportsModal","isError","undefined","handleDisableShowReports","PostForm","useState","setImage","isUploaded","setIsUploaded","setCaption","useHistory","draggable","htmlFor","style","width","accept","files","reader","FileReader","onload","result","readAsDataURL","FollowNode","isDisabled","setIsDisabled","setText","setClasses","concat","classList","remove","FollowFinder","followUserData","fetchFollowUsers","users","LogoutForm","submitLogout","Navbar","location","useLocation","useLayoutEffect","callback","setIsAuthenticated","user","auth","isAuthenticated","ProtectedRoute","nextProps","nextContext","redirect","App","wrapperSetIsAuthenticated","useCallback","path","component","StrictMode"],"mappings":"8PAmBeA,E,4JAfX,WACI,OACI,qBAAKC,UAAWC,KAAKC,MAAMC,QAA3B,SACI,wBACIH,UAAU,MACVI,KAAMH,KAAKC,MAAME,KACjBC,SAAUJ,KAAKC,MAAMG,SACrBC,QAASL,KAAKC,MAAMI,QAJxB,SAKKL,KAAKC,MAAMK,a,GAVLC,IAAMC,W,QCwFlBC,E,kDAnFX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAKVS,SAAW,SAACC,GAGR,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAT1B,EAYnBC,SAAW,SAACL,GACRA,EAAEM,iBAGF,IAAMC,EAAWC,KAAKC,UAAU,EAAKC,OAWrCC,MAAM,cAAe,CACjBC,OAAQ,OACRC,KAAMN,EACNO,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QACL,OAAO,EAAK7B,MAAM8B,QAAQC,KAAK,SAEnC,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAgBI,MAEnCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OAxChC,EAAKf,MAAS,CAACwB,SAAU,GAAIC,SAAU,IAHxB,E,0CA8CnB,WACI,OAEI,cADA,CACA,QACI9B,SAAUhB,KAAKgB,SACfjB,UAAU,kBAFd,kBAII,uBACIe,KAAK,WACLX,KAAK,OACL4C,YAAY,WACZrC,SAAUV,KAAKU,WAEnB,uBACII,KAAK,WACLX,KAAK,WACL4C,YAAY,WACZrC,SAAUV,KAAKU,WAEnB,cAAC,EAAD,CACIP,KAAK,SACLD,QAAQ,wBACRI,KAAK,UAET,cAAC,IAAD,CAAM0C,GAAI,YAAV,SACA,cAAC,EAAD,CACI7C,KAAK,SACLD,QAAQ,wBACRI,KAAK,eAGT,qBAAK2C,GAAG,gC,GA9EA1C,IAAMC,WCkFf0C,E,kDAlFX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAKVS,SAAW,SAACC,GAGR,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAT1B,EAYnBC,SAAW,SAACL,GACRA,EAAEM,iBAGF,IAAMC,EAAWC,KAAKC,UAAU,EAAKC,OAWrCC,MAAM,iBAAkB,CACpBC,OAAQ,OACRC,KAAMN,EACNO,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QACL,OAAO,EAAK7B,MAAM8B,QAAQC,KAAK,SAEnC,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAgBI,MAEnCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OAxChC,EAAKf,MAAS,CAACwB,SAAU,GAAIC,SAAU,GAAIK,UAAW,IAHvC,E,0CA8CnB,WACI,OAEI,cADA,CACA,QACInC,SAAUhB,KAAKgB,SACfjB,UAAU,kBAFd,oBAII,uBACIe,KAAK,WACLX,KAAK,OACL4C,YAAY,WACZrC,SAAUV,KAAKU,WAEnB,uBACII,KAAK,WACLX,KAAK,WACL4C,YAAY,WACZrC,SAAUV,KAAKU,WAEnB,uBACII,KAAK,YACLX,KAAK,WACL4C,YAAY,kBACZrC,SAAUV,KAAKU,WAEnB,cAAC,EAAD,CACIP,KAAK,SACLD,QAAQ,wBACRI,KAAK,aAET,qBAAK2C,GAAG,gC,GA7EG1C,IAAMC,W,iECL1B,SAAS4C,EAAUtC,GACtB,IAAIuC,EAAc,KAClB,GAAIf,SAASgB,QAA8B,KAApBhB,SAASgB,OAE5B,IADA,IAAMC,EAAUjB,SAASgB,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAG9C,EAAK4C,OAAS,KAAQ5C,EAAO,IAAM,CACvDuC,EAAcQ,mBAAmBP,EAAOM,UAAU9C,EAAK4C,OAAS,IAChE,OAIZ,OAAOL,EC0FX,SAASS,EAAT,GAAuC,IAArBjB,EAAoB,EAApBA,SAAUkB,EAAU,EAAVA,QAExB,OACI,sBAAKhE,UAAU,cAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,iBACVkE,IAAKpB,EACLqB,IAAI,KAER,sBAAKnE,UAAU,UAAf,UACI,mBAAGA,UAAU,uBAAb,SAAqC8C,IACrC,mBAAG9C,UAAU,mBAAb,SAAiCgE,UAMlCI,M,kDA7GX,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IAIVmE,uBAAyB,SAACzD,GACtB,EAAKC,SAAS,CAACyD,WAAY1D,EAAEE,OAAOE,SANrB,EASnBuD,aAAe,SAAC3D,GACZA,EAAEM,iBACF,IAAMsD,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ,EAAKxE,MAAMgD,IACnCsB,EAASE,OAAO,UAAW,EAAKpD,MAAMgD,YAEtC,IAAMK,EAAYtB,EAAU,aAE5B9B,MACI,gBAAiB,CACbC,OAAQ,OACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAItBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QAAT,CAaA,IAAMG,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAeI,OAjB/B,CACI,EAAKzB,SAAS,CAACyD,WAAY,KAC3B,IAAMQ,EAAoBvC,SAASC,eAAe,8BAClD,EAAKtC,MAAM6E,SAAS9C,KAAKH,EAAKkC,SAC9B,IAAMgB,EACF,EAAK9E,MAAM6E,SAAS3C,KAAI,SAAC4B,GACrB,OACI,cAACD,EAAD,CAASjB,SAAUkB,EAAQlB,SAAUkB,QAASA,EAAQiB,aAGlExC,IAASC,OAAOsC,EAAiBF,OASxCnC,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OA9ChC,EAAKf,MAAS,CAACgD,WAAY,IAFZ,E,0CAmDnB,WACI,OACI,sBAAKtE,UAAU,gBAAf,UAEI,qBAAKA,UAAU,iBAAiBmE,IAAKlE,KAAKC,MAAMgF,MAAOhB,IAAI,KAE3D,sBAAKlE,UAAU,mBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,kBACVkE,IAAKjE,KAAKC,MAAM4C,SAChBqB,IAAI,KAER,mBAAGnE,UAAU,GAAb,SAAiBC,KAAKC,MAAM4C,WAC5B,cAAC,IAAD,CAAiBqC,KAAMC,IAASpF,UAAU,yBACzBM,QAASL,KAAKC,MAAMmF,+BAGzC,qBAAKnC,GAAG,6BAAR,SACKjD,KAAKC,MAAM6E,SAAS3C,KAAI,SAAC4B,GACtB,OACI,cAACD,EAAD,CAASjB,SAAUkB,EAAQlB,SAAUkB,QAASA,EAAQiB,eAKlE,uBAAMhE,SAAUhB,KAAKsE,aAAcvE,UAAU,gBAA7C,UACI,0BAAUgB,MAAOf,KAAKqB,MAAMgD,WAClB3D,SAAUV,KAAKoE,uBACfrE,UAAU,yBACVe,KAAK,cACLiC,YAAY,sCACtB,cAAC,EAAD,CAAc5C,KAAK,SAASG,KAAK,cAAcJ,QAAQ,sBACvD,qBAAK+C,GAAI,sC,GArFV1C,IAAMC,WC4Ed6E,E,kDA3EX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IAIVqF,sBAAwB,SAAC3E,GACrB,EAAKC,SAAS,CAAC2E,UAAW5E,EAAEE,OAAOE,SANpB,EASnBuD,aAAe,SAAC3D,GACZA,EAAEM,iBACF,IAAMsD,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ,EAAKxE,MAAMgD,IACnCsB,EAASE,OAAO,UAAW,EAAKpD,MAAMkE,WAEtC,IAAMb,EAAYtB,EAAU,aAE5B9B,MACI,eAAgB,CACZC,OAAQ,OACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAItBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAAG,GACL,GAAqB,SAAjBA,EAAKC,QACL,OAAO,EAAK7B,MAAM8B,QAAQC,KAAK,KAEnC,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAgBI,MAEnCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OApChC,EAAKf,MAAS,CAACkE,UAAW,IAFX,E,0CAyCnB,WACI,OACI,sBAAKxF,UAAU,cAAf,UAEI,qBAAKA,UAAU,eAAemE,IAAKlE,KAAKC,MAAMgF,MAAOhB,IAAI,KAEzD,sBAAKlE,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,gBACVkE,IAAKjE,KAAKC,MAAM4C,SAChBqB,IAAI,KAER,oBAAGnE,UAAU,GAAb,UAAiBC,KAAKC,MAAM4C,SAA5B,KAAwC7C,KAAKC,MAAMuF,WACnD,cAAC,IAAD,CAAiBN,KAAMC,IAASpF,UAAU,uBACzBM,QAASL,KAAKC,MAAMwF,6BAGzC,uBAAMzE,SAAUhB,KAAKsE,aAAcvE,UAAU,cAA7C,UACI,0BAAUgB,MAAOf,KAAKqB,MAAMkE,UAClB7E,SAAUV,KAAKsF,sBACfvF,UAAU,uBACVe,KAAK,aACLiC,YAAY,2CACtB,cAAC,EAAD,CAAc5C,KAAK,SAASG,KAAK,gBAAgBJ,QAAQ,oBACzD,qBAAK+C,GAAI,sC,GAnEX1C,IAAMC,WCiI5B,SAASkF,EAAT,GAAkH,IAAnGzC,EAAkG,EAAlGA,GAAIJ,EAA8F,EAA9FA,SAAU2C,EAAoF,EAApFA,QAASP,EAA2E,EAA3EA,MAAOH,EAAoE,EAApEA,SAAUa,EAA0D,EAA1DA,yBAA0BC,EAAgC,EAAhCA,uBAAwBC,EAAQ,EAARA,MAErG,OACI,sBAAK9F,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,cACVkE,IAAKpB,EACLqB,IAAI,KAER,mBAAGnE,UAAU,gBAAb,SAA8B8C,IAC9B,cAAC,IAAD,CAAiBqC,KAAMY,IAAqB/F,UAAU,6BACrCM,QAAS,kBAAMuF,EAAuB3C,EAAIJ,EAAUoC,EAAOO,SAEhF,qBAAKzF,UAAU,aAAamE,IAAKe,EAAOhB,IAAI,KAC5C,sBAAKlE,UAAU,sBAAf,UACI,oBAAGA,UAAU,oBAAb,UAAiC,mCAAS8C,EAAT,OAAjC,IAA+D2C,KAC/D,cAAC,IAAD,CAAiBN,KAAMa,IAAYhG,UAAU,+BAC5BM,QAAS,kBAAMsF,EAAyB1C,EAAIJ,EAAUoC,EAAOH,WAftDe,GAqBzBG,M,kDAvJX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IA2BVgG,wBAA0B,SAACC,EAAQC,EAAcC,EAAWC,GACxD,IAAMC,EAAqB,2BACpB,EAAKjF,MAAMkF,oBADS,IACWL,OAAQA,EAAQC,aAAcA,EAChEC,UAAWA,EAAWC,YAAaA,IAEvC,EAAKzF,SAAS,CAAC2F,mBAAoBD,IACnC,EAAK1F,SAAS,CAAC4F,mBAAmB,KAlCnB,EAqCnBC,yBAA2B,WACvB,EAAK7F,SAAS,CAAC4F,mBAAmB,KAtCnB,EAyCnBE,sBAAwB,SAACR,EAAQC,EAAcC,EAAWO,GACtD,IAAMC,EAAmB,2BAClB,EAAKvF,MAAMwF,kBADO,IACWX,OAAQA,EAAQC,aAAcA,EAC9DC,UAAWA,EAAWO,YAAaA,IAEvC,EAAK/F,SAAS,CAACiG,iBAAkBD,IACjC,EAAKhG,SAAS,CAACkG,iBAAiB,KA/CjB,EAkDnBC,uBAAyB,WACrB,EAAKnG,SAAS,CAACkG,iBAAiB,KAjDhC,EAAKzF,MAAQ,CACTH,SAAU,GACVsF,mBAAmB,EACnBM,iBAAiB,EACjBP,mBAAoB,CAChBL,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,YAAa,IAEjBQ,iBAAkB,CACdX,OAAQ,GACRS,YAAa,GACbR,aAAc,GACdC,UAAW,KAKnB,EAAKH,wBAA0B,EAAKA,wBAAwBe,KAA7B,gBAC/B,EAAKP,yBAA2B,EAAKA,yBAAyBO,KAA9B,gBAChC,EAAKN,sBAAwB,EAAKA,sBAAsBM,KAA3B,gBAC7B,EAAKD,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAzBH,E,8CAsDnB,WAAc,IAAD,OACT1F,MAAM,aAAc,CAChBC,OAAQ,MACRE,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACN,EAAKjB,SAAS,CAACM,SAAUW,S,+BAIrC,WACI7B,KAAKiH,e,oBAGT,WAAU,IAAD,OACCC,EAAQlH,KAAKqB,MAAMH,SACzB,OACI,gCACI,cAACiG,EAAA,EAAD,CACIlE,GAAG,YACHmE,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACRC,WAAW,SALf,SAOKL,EAAM/E,KAAI,SAACqF,EAAM3B,GACd,OACI,cAACH,EAAD,CAAMzC,GAAIuE,EAAKvE,GAAIJ,SAAU2E,EAAK3E,SAAU2C,QAASgC,EAAKhC,QACpDP,MAAOuC,EAAKvC,MAAOH,SAAU0C,EAAK1C,SAClCa,yBAA0B,EAAKM,wBAC/BL,uBAAwB,EAAKc,uBACxBb,QAIvB,cAAC,IAAD,CACI4B,OAAQzH,KAAKqB,MAAMmF,kBACnBkB,aAAa,wBACbC,2BAA2B,EAC3BC,iBAAiB,EACjB7H,UAAU,kBACV8H,eAAgB7H,KAAKyG,yBANzB,SAQI,cAAC,EAAD,CAAUxD,GAAIjD,KAAKqB,MAAMkF,mBAAmBL,OAClCrD,SAAU7C,KAAKqB,MAAMkF,mBAAmBJ,aACxClB,MAAOjF,KAAKqB,MAAMkF,mBAAmBH,UACrCtB,SAAU9E,KAAKqB,MAAMkF,mBAAmBF,YACxCjB,0BAA2BpF,KAAKyG,6BAI9C,cAAC,IAAD,CACIgB,OAAQzH,KAAKqB,MAAMyF,gBACnBY,aAAa,sBACbC,2BAA2B,EAC3BC,iBAAiB,EACjB7H,UAAU,kBACV8H,eAAgB7H,KAAK+G,uBANzB,SAQI,cAAC,EAAD,CAAS9D,GAAIjD,KAAKqB,MAAMwF,iBAAiBX,OACjCV,QAASxF,KAAKqB,MAAMwF,iBAAiBF,YACrC9D,SAAU7C,KAAKqB,MAAMwF,iBAAiBV,aACtClB,MAAOjF,KAAKqB,MAAMwF,iBAAiBT,UACnCX,wBAAyBzF,KAAK+G,kC,GAxHvCxG,IAAMC,WC4FzB,SAASsH,EAAT,GAA8D,IAA7CC,EAA4C,EAA5CA,OAAQlF,EAAoC,EAApCA,SAAUI,EAA0B,EAA1BA,GAAI+E,EAAsB,EAAtBA,oBAEnC,OACI,sBAAKjI,UAAU,aAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,gBACVkE,IAAKpB,EACLqB,IAAI,KAER,sBAAKnE,UAAU,UAAf,UACI,mBAAGA,UAAU,sBAAb,SAAoC8C,IACpC,oBAAG9C,UAAU,kBAAb,sBAAyCgI,KACzC,cAAC,EAAD,CAAc5H,KAAK,SAASG,KAAK,UAAUJ,QAAQ,kBACrCG,QAAS,kBAAM2H,EAAoB/E,YAOlDgF,M,kDAjHX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAKViI,WAAa,SAACvH,GACVA,EAAEM,iBACF,IAAMsD,EAAW,IAAIC,SACrBD,EAASE,OAAO,KAAM,EAAKxE,MAAMgD,IAEjC,IAAMyB,EAAYtB,EAAU,aAE5B9B,MAAM,aAAc,CAChBC,OAAQ,SACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAGlBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QACL,OAAO,EAAKE,KAAK,KAErB,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAeI,MAElCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OAhCjB,EAoCnB+F,cAAgB,SAAClF,GACb,IAAMsB,EAAW,IAAIC,SACrBD,EAASE,OAAO,KAAMxB,GAEtB,IAAMyB,EAAYtB,EAAU,aAE5B9B,MAAM,eAAgB,CAClBC,OAAQ,SACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAGlBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QACL,OAAO,EAAK7B,MAAM8B,QAAQC,KAAK,KAEnC,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAeI,MAElCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OA3DhC,EAAKf,MAAS,CAACkE,UAAW,IAC1B,EAAK4C,cAAgB,EAAKA,cAAcnB,KAAnB,gBAHN,E,0CAiEnB,WAAU,IAAD,OACL,OACI,sBAAKjH,UAAU,cAAf,UAEI,qBAAKA,UAAU,eAAemE,IAAKlE,KAAKC,MAAMgF,MAAOhB,IAAI,KAEzD,sBAAKlE,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CAAcI,KAAK,SAASG,KAAK,cAAcJ,QAAQ,kBACzCG,QAASL,KAAKkI,eAIhC,qBAAKjF,GAAG,2BAAR,SACKjD,KAAKC,MAAMmI,QAAQjG,KAAI,SAACiG,GACrB,OACI,cAACN,EAAD,CAAQ7E,GAAImF,EAAQnF,GAAI8E,OAAQK,EAAQpD,QAASnC,SAAUuF,EAAQvF,SAC3DmF,oBAAqB,EAAKG,+B,GAnFvC5H,IAAMC,WCqGjC,SAASkF,EAAT,GAAuF,IAAxEzC,EAAuE,EAAvEA,GAAIJ,EAAmE,EAAnEA,SAAU2C,EAAyD,EAAzDA,QAASP,EAAgD,EAAhDA,MAAO8C,EAAyC,EAAzCA,OAAQM,EAAiC,EAAjCA,wBAAyBxC,EAAQ,EAARA,MAC1E,OACI,sBAAK9F,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAACiE,EAAA,EAAD,CACIjE,UAAU,cACVkE,IAAKpB,EACLqB,IAAI,KAER,mBAAGnE,UAAU,gBAAb,SAA8B8C,OAElC,qBAAK9C,UAAU,aAAamE,IAAKe,EAAOhB,IAAI,KAC5C,sBAAKlE,UAAU,sBAAf,UACI,oBAAGA,UAAU,oBAAb,UAAiC,mCAAS8C,EAAT,OAAjC,IAA+D2C,KAC/D,cAAC,IAAD,CAAiBN,KAAMY,IAAqB/F,UAAU,8BACrCM,QAAS,kBAAMgI,EAAwBpF,EAAIJ,EAAUoC,EAAO8C,WAbrDlC,GAmBzByC,M,kDAxHX,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IAmBVsI,uBAAyB,SAACrC,EAAQC,EAAcC,EAAWoC,GACvD,IAAMC,EAAoB,2BACnB,EAAKpH,MAAMqH,mBADQ,IACWxC,OAAQA,EAAQC,aAAcA,EAC/DC,UAAWA,EAAWoC,WAAYA,IAEtC,EAAK5H,SAAS,CAAC8H,kBAAmBD,IAClC,EAAK7H,SAAS,CAAC+H,kBAAkB,KA1BlB,EA6BnBC,wBAA0B,WACtB,EAAKhI,SAAS,CAAC+H,kBAAkB,KA5BjC,EAAKtH,MAAQ,CACTH,SAAU,GACVyH,kBAAkB,EAClBD,kBAAmB,CACfxC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXoC,WAAY,IAEhBK,SAAS,EACT3G,OAAQ,IAGZ,EAAKqG,uBAAyB,EAAKA,uBAAuBvB,KAA5B,gBAC9B,EAAK4B,wBAA0B,EAAKA,wBAAwB5B,KAA7B,gBAC/B,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAjBH,E,8CAiCnB,WAAc,IAAD,OACT1F,MAAM,eAAgB,CAClBC,OAAQ,MACRE,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACkB,OAAhBA,EAAKK,aAAmC4G,IAAhBjH,EAAKK,OAC7B,EAAKtB,SAAS,CAACM,SAAUW,KAEzB,EAAKjB,SAAS,CAACiI,SAAS,IACxB,EAAKjI,SAAS,CAACsB,OAAQL,EAAKK,aAGnCQ,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,Q,+BAGpC,WACIpC,KAAKiH,e,oBAGT,WAAU,IAAD,OACCC,EAAQlH,KAAKqB,MAAMH,SACzB,OAAIlB,KAAKqB,MAAMwH,QACH,6BAAK7I,KAAKqB,MAAMa,SAGpB,gCAEI,cAACiF,EAAA,EAAD,CACIlE,GAAG,YACHmE,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACRC,WAAW,SALf,SAOKL,EAAM/E,KAAI,SAACqF,EAAM3B,GACd,OACI,cAAC,EAAD,CAAM5C,GAAIuE,EAAKvE,GAAIJ,SAAU2E,EAAK3E,SAAU2C,QAASgC,EAAKhC,QACpDP,MAAOuC,EAAKvC,MAAO8C,OAAQP,EAAKY,QAChCC,wBAAyB,EAAKE,wBACzB1C,QAIvB,cAAC,IAAD,CACI4B,OAAQzH,KAAKqB,MAAMsH,iBACnBjB,aAAa,uBACbC,2BAA2B,EAC3BC,iBAAiB,EACjB7H,UAAU,kBACV8H,eAAgB7H,KAAK4I,wBANzB,SAQI,cAAC,EAAD,CAAc3F,GAAIjD,KAAKqB,MAAMqH,kBAAkBxC,OACjCrD,SAAU7C,KAAKqB,MAAMqH,kBAAkBvC,aACvClB,MAAOjF,KAAKqB,MAAMqH,kBAAkBtC,UACpCgC,QAASpI,KAAKqB,MAAMqH,kBAAkBF,WACtCO,yBAA0B/I,KAAK4I,mC,GA5F5CrI,IAAMC,W,OCyGhBwI,MA3Gf,WAAqB,IAAD,EACUC,mBAAS,IADnB,mBACThE,EADS,KACFiE,EADE,OAEoBD,oBAAS,GAF7B,mBAETE,EAFS,KAEGC,EAFH,OAGcH,mBAAS,IAHvB,mBAGTzD,EAHS,KAGA6D,EAHA,KAuBZtH,EAAUuH,cAkCd,OACI,uBAAMtI,SAjCV,SAAsBL,GAClBA,EAAEM,iBACF,IAAMsD,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASQ,GACzBV,EAASE,OAAO,UAAWe,GAE3B,IAAMd,EAAYtB,EAAU,aAE5B9B,MACI,aAAc,CACVC,OAAQ,OACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAItBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QACL,OAAOC,EAAQC,KAAK,SAExB,IAAMC,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CC,IAASC,OAAO,cAACR,EAAD,IAAgBI,MAEnCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OAIFrC,UAAW,iBAAzC,UACI,6CACA,qBAAKA,UAAW,aAAhB,SACMoJ,EAkBM,sBAAKpJ,UAAW,gBAAhB,UACI,qBAAKA,UAAU,aACVmE,IAAI,wEACJD,IAAI,aACJ5D,QAAS,WACL+I,GAAc,GACdF,EAAS,SAGlB,qBAAKjG,GAAG,iBACHiB,IAAKe,EACLhB,IAAI,YACJsF,WAAW,OA7BvB,qCACG,wBAAOxJ,UAAW,YAAayJ,QAAQ,eAAvC,UACI,qBAAKC,MAAO,CAACC,MAAO,KAAMH,WAAW,EAChCrF,IAAI,4IACJD,IAAI,gBACT,mBAAGhB,GAAI,MAAP,sCAIJ,uBACIlD,UAAW,YACXkD,GAAG,eACH9C,KAAK,OACLwJ,OAAO,mBACPjJ,SAvExB,SAA2BC,GACvB,GAAIA,EAAEE,OAAO+I,OAASjJ,EAAEE,OAAO+I,MAAM,GAAI,CACrC,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAUpJ,GACtBuI,EAASvI,EAAEE,OAAOmJ,QAClBZ,GAAc,IAElBS,EAAOI,cAActJ,EAAEE,OAAO+I,MAAM,aAoFpC,qBAAK7J,UAAW,YAAhB,SACI,0BAAUgB,MAAOyE,EAAS9E,SAjFtC,SAA6BC,GACzB0I,EAAW1I,EAAEE,OAAOE,QAgF6CZ,KAAK,OAAOW,KAAK,UAChEf,UAAW,oBAAqBgD,YAAY,kBAE1D,uBAAOhD,UAAW,WAAYI,KAAK,SAASY,MAAM,SAClD,qBAAKkC,GAAI,6BCpErB,SAASiH,EAAT,GAAiC,IAAZrH,EAAW,EAAXA,SAAW,EACQoG,oBAAS,GADjB,mBACrBkB,EADqB,KACTC,EADS,OAEJnB,mBAAS,UAFL,mBAErB3I,EAFqB,KAEf+J,EAFe,OAGEpB,mBAAS,eAHX,mBAGrB/I,EAHqB,KAGZoK,EAHY,KAwC5B,OACI,sBAAKvK,UAAWG,EAAhB,UACI,4BAAI2C,IACJ,wBACIxC,QAvCZ,WAEI,IAAMqE,EAAYtB,EAAU,aAEtBmB,EAAW,IAAIC,SACrBD,EAASE,OAAO,iBAAkB5B,GAElCvB,MACI,eAAgB,CACZC,OAAQ,OACRC,KAAML,KAAKC,UAAUuD,OAAOC,YAAYL,IACxC9C,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAItBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,GAAqB,SAAjBA,EAAKC,QAIL,OAHAsI,GAAc,GACdC,EAAQ,mBACRC,EAAWpK,EAAQqK,OAAO,yBAG9B,IAAMtI,EAAa,kBACf,6BAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAAK,OAAI,mCAAkBA,EAAlB,MAASA,SAErCC,EAAcC,SAASC,eAAe,wBAC5CF,EAAYmI,UAAUC,OAAO,gBAC7BjI,IAASC,OAAO,cAACR,EAAD,IAAgBI,MAEnCK,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,OAOFhC,SAAU+J,EAChCpK,UAAW,gBAFf,SAEiCO,OAM9BoK,M,kDArFX,WAAYzK,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQ,CAACsJ,eAAgB,IAC9B,EAAKC,iBAAmB,EAAKA,iBAAiB5D,KAAtB,gBAHT,E,oDAMnB,WAAoB,IAAD,OACf1F,MAAM,eAAgB,CAClBC,OAAQ,MACRE,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACN,EAAKjB,SAAS,CAAC+J,eAAgB9I,S,+BAI3C,WACI7B,KAAK4K,qB,oBAGT,WACI,IAAMC,EAAQ7K,KAAKqB,MAAMsJ,eACzB,OACI,sBAAK5K,UAAU,YAAf,UACK8K,EAAM1I,KAAI,SAACN,EAAMgE,GAAP,OACP,cAACqE,EAAD,CAAYrH,SAAUhB,EAAKgB,cAE/B,qBAAKI,GAAG,uBAAuBlD,UAAU,wB,GA7B9BQ,IAAMC,WCkClBsK,MAjCf,WAEI,IAAI/I,EAAUuH,cA0Bd,OACI,cAAC,EAAD,CAAcjJ,QAAS,kBAzB3B,SAAsBM,GAElB,IAAM+D,EAAYtB,EAAU,aAE5B9B,MAAM,eAAgB,CACdC,OAAQ,OACRC,KAAM,GACNC,QAAS,CACL,eAAgB,mBAChB,cAAeiD,KAItBhD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,MAAqB,SAAjBA,EAAKC,QACEC,EAAQC,KAAK,UAEbD,EAAQC,KAAK,YAG3BU,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,MAIH2I,IAAgBzK,KAAK,YCc3C0K,MA1Cf,SAAgB/K,GAEZ,IAAMgL,EAAWC,cAQjB,OANAC,2BAAgB,WTKc,IAAUC,ISJhB,SAAAvJ,GAChB5B,EAAMoL,mBAAmBxJ,ITIhCP,MAAM,gBAAiB,CACpBC,OAAQ,MACRE,QAAS,CAAC,eAAgB,sBAEzBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFuJ,IAAyB,kBAAdvJ,EAAKyJ,MAA0C,SAAdzJ,EAAK0J,UAEpD7I,OAAM,SAAAN,GAAK,OAAIO,QAAQC,IAAIR,QSV7B,CAAC6I,EAAUhL,IAGV,qBAAKF,UAAU,mBAAf,SACI,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAMiD,GAAG,QAAQjD,UAAU,eAA3B,uBAGCE,EAAMuL,gBACH,sBAAKzL,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMiD,GAAG,QAAT,SACI,cAAC,EAAD,CAAc1C,KAAK,eAEvB,cAAC,IAAD,CAAM0C,GAAG,UAAT,SACI,cAAC,EAAD,CAAc1C,KAAK,oBAEvB,cAAC,EAAD,OAGJ,sBAAKP,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMiD,GAAG,SAAT,SACI,cAAC,EAAD,CAAc1C,KAAK,YAEvB,cAAC,IAAD,CAAM0C,GAAG,YAAT,SACI,cAAC,EAAD,CAAc1C,KAAK,wB,QChBhCmL,E,+KAlBX,SAA0BC,EAAWC,GAC7B3L,KAAKC,MAAMuL,kBAAoBE,EAAUF,iBACzCxL,KAAKY,SAAS,CAAC4K,gBAAiBE,EAAUF,oB,oBAIlD,WAAU,IAAD,EACyCxL,KAAKC,MAA5CuL,EADF,EACEA,gBAAiBI,EADnB,EACmBA,SAAa3L,EADhC,8CAEL,OACIuL,EACI,cAAC,IAAD,eACQvL,IAER,cAAC,IAAD,CAAU+C,GAAI4I,Q,GAfDrL,IAAMC,WCqCpBqL,MA3Bf,WAAgB,IAAD,EAEmC5C,oBAAS,GAF5C,mBAEJuC,EAFI,KAEaH,EAFb,KAILS,EAA4BC,uBAAY,SAAAR,GAC1CF,EAAmBE,KACpB,CAACF,IAEJ,OACI,cAAC,IAAD,UACI,sBAAKtL,UAAU,MAAf,UACI,cAAC,EAAD,CAAQyL,gBAAiBA,EAAiBH,mBAAoBS,IAC9D,qBAAK/L,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAgBiM,KAAK,SAASC,UAAWxL,EAAW+K,iBAAkBA,EAAiBI,SAAU,UACjG,cAAC,EAAD,CAAgBI,KAAK,YAAYC,UAAW/I,EAAcsI,iBAAkBA,EAAiBI,SAAU,UACvG,cAAC,EAAD,CAAgBI,KAAK,QAAQC,UAAWjG,EAAMwF,gBAAiBA,EAAiBI,SAAU,WAC1F,cAAC,EAAD,CAAgBI,KAAK,QAAQC,UAAWjD,EAAUwC,gBAAiBA,EAAiBI,SAAU,WAC9F,cAAC,EAAD,CAAgBI,KAAK,UAAUC,UAAWvB,EAAcc,gBAAiBA,EAAiBI,SAAU,WACpG,cAAC,EAAD,CAAgBI,KAAK,UAAUC,UAAW3D,EAAYkD,gBAAiBA,EAAiBI,SAAU,sBC1B1HpJ,IAASC,OACP,cAAC,IAAMyJ,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGR5J,SAASC,eAAe,W","file":"static/js/main.1d8a6cf7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className={this.props.classes}>\r\n                <button\r\n                    className='btn'\r\n                    type={this.props.type}\r\n                    disabled={this.props.disabled}\r\n                    onClick={this.props.onClick}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // By using states we can associate the name property of the <input> with the state variable and we can initialize values\r\n        this.state = ({username: '', password: ''})\r\n    }\r\n\r\n    onChange = (e) => {\r\n        // If using states to handle, this line will index the state variable with the same name as the calling-event's\r\n        // (the calling input field's) name property and update the state's value to the <input>'s new value\r\n        this.setState({[e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Since using states means `this.state` holds the current state of each input field, we can simply convert to JSON and its ready for POST\r\n        const postData = JSON.stringify(this.state);\r\n\r\n        /*\r\n        // If using the FormData instead, it will only take what is currently the value of the <input>, and not its state\r\n        const formData = new FormData(e.target);\r\n        // You can see here that this successfully gets/prints the JSON formatted form. However, if you were to try to\r\n        // set the state in the constructor initially and submit the form before writing any values in the fields,\r\n        // the output will be all empty fields (ex: {\"username\": \"\",....}) although username's state is 'some initial value'\r\n        console.log(JSON.stringify(Object.fromEntries(formData)));\r\n        */\r\n\r\n        fetch('/api/login/', {\r\n            method: 'POST',\r\n            body: postData,\r\n            headers: {'content-type': 'application/json'}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return this.props.history.push('/feed')\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList />, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // The name property of every field needs to be the same as the state so that the relation is established\r\n            <form\r\n                onSubmit={this.onSubmit}\r\n                className=\"auth-form input\">\r\n                Login\r\n                <input\r\n                    name='username'\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    onChange={this.onChange}\r\n                />\r\n                <input\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={this.onChange}\r\n                />\r\n                <SubmitButton\r\n                    type='submit'\r\n                    classes='submit-button-padding'\r\n                    text='Login'\r\n                />\r\n                <Link to =\"/register\">\r\n                <SubmitButton\r\n                    type='submit'\r\n                    classes='submit-button-padding'\r\n                    text='Register'\r\n                />\r\n                </Link>\r\n                <div id=\"post-response-errors\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\n\r\nclass RegisterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // By using states we can associate the name property of the <input> with the state variable and we can initialize values\r\n        this.state = ({username: '', password: '', password2: ''})\r\n    }\r\n\r\n    onChange = (e) => {\r\n        // If using states to handle, this line will index the state variable with the same name as the calling-event's\r\n        // (the calling input field's) name property and update the state's value to the <input>'s new value\r\n        this.setState({[e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Since using states means `this.state` holds the current state of each input field, we can simply convert to JSON and its ready for POST\r\n        const postData = JSON.stringify(this.state);\r\n\r\n        /*\r\n        // If using the FormData instead, it will only take what is currently the value of the <input>, and not its state\r\n        const formData = new FormData(e.target);\r\n        // You can see here that this successfully gets/prints the JSON formatted form. However, if you were to try to\r\n        // set the state in the constructor initially and submit the form before writing any values in the fields,\r\n        // the output will be all empty fields (ex: {\"username\": \"\",....}) although username's state is 'some initial value'\r\n        console.log(JSON.stringify(Object.fromEntries(formData)));\r\n        */\r\n\r\n        fetch('/api/register/', {\r\n            method: 'POST',\r\n            body: postData,\r\n            headers: {'content-type': 'application/json'}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return this.props.history.push('/feed')\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList />, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // The name property of every field needs to be the same as the state so that the relation is established\r\n            <form\r\n                onSubmit={this.onSubmit}\r\n                className=\"auth-form input\">\r\n                Sign up\r\n                <input\r\n                    name='username'\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    onChange={this.onChange}\r\n                />\r\n                <input\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={this.onChange}\r\n                />\r\n                <input\r\n                    name='password2'\r\n                    type='password'\r\n                    placeholder='Repeat Password'\r\n                    onChange={this.onChange}\r\n                />\r\n                <SubmitButton\r\n                    type='submit'\r\n                    classes='submit-button-padding'\r\n                    text='Register'\r\n                />\r\n                <div id=\"post-response-errors\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","export function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport const getIsAuthenticated = function (callback) {\r\n     fetch('/api/getauth/', {\r\n        method: 'GET',\r\n        headers: {'content-type': 'application/json'}\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            callback(!(data.user === \"AnonymousUser\" && data.auth === \"None\"));\r\n        })\r\n        .catch(error => console.log(error))\r\n}","import React from \"react\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport '../App.css';\r\nimport {getCookie} from \"../GlobalFunctions\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({newComment: \"\"});\r\n    }\r\n\r\n    handleNewCommentChange = (e) => {\r\n        this.setState({newComment: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('post', this.props.id);\r\n        formData.append('content', this.state.newComment);\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch(\r\n            '/api/comment/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(Object.fromEntries(formData)),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    this.setState({newComment: \"\"});\r\n                    const commentsContainer = document.getElementById(\"comments-comment-container\");\r\n                    this.props.comments.push(data.comment);\r\n                    const updatedComments =\r\n                        this.props.comments.map((comment) => {\r\n                            return (\r\n                                <Comment username={comment.username} comment={comment.content}/>\r\n                            )\r\n                        })\r\n                    ReactDOM.render(updatedComments, commentsContainer);\r\n                    return;\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList/>, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comments-card\">\r\n\r\n                <img className=\"comments-image\" src={this.props.image} alt=\"\"/>\r\n\r\n                <div className='comments-content'>\r\n                    <div className=\"comments-header\">\r\n                        <Avatar\r\n                            className=\"comments-avatar\"\r\n                            alt={this.props.username}\r\n                            src=\"\"\r\n                        />\r\n                        <p className=''>{this.props.username}</p>\r\n                        <FontAwesomeIcon icon={faTimes} className='comments-close ml-auto'\r\n                                         onClick={this.props.handleDisableShowComments}/>\r\n                    </div>\r\n\r\n                    <div id='comments-comment-container'>\r\n                        {this.props.comments.map((comment) => {\r\n                            return (\r\n                                <Comment username={comment.username} comment={comment.content}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    <form onSubmit={this.handleSubmit} className='comments-form'>\r\n                        <textarea value={this.state.newComment}\r\n                                  onChange={this.handleNewCommentChange}\r\n                                  className='comments-form-textarea'\r\n                                  name=\"new-comment\"\r\n                                  placeholder=\"Add a new comment to this post...\"/>\r\n                        <SubmitButton type='submit' text=\"Add Comment\" classes='comments-form-btn'/>\r\n                        <div id={\"post-response-errors\"}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Comment({username, comment}) {\r\n\r\n    return (\r\n        <div className='comment-box'>\r\n            <Avatar\r\n                className=\"comment-avatar\"\r\n                alt={username}\r\n                src=\"\"\r\n            />\r\n            <div className='mr-auto'>\r\n                <p className='comment-box-username'>{username}</p>\r\n                <p className='comment-box-text'>{comment}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport '../App.css';\r\nimport {getCookie} from \"../GlobalFunctions\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\n\r\nclass Reports extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({newReport: \"\"});\r\n    }\r\n\r\n    handleNewReportChange = (e) => {\r\n        this.setState({newReport: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('post', this.props.id);\r\n        formData.append('content', this.state.newReport);\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch(\r\n            '/api/report/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(Object.fromEntries(formData)),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n               .then(data => {\r\n                if (data.success === 'true') {\r\n                    return this.props.history.push('/')\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList />, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"report-card\">\r\n\r\n                <img className=\"report-image\" src={this.props.image} alt=\"\"/>\r\n\r\n                <div className='report-content'>\r\n                    <div className=\"report-header\">\r\n                        <Avatar\r\n                            className=\"report-avatar\"\r\n                            alt={this.props.username}\r\n                            src=\"\"\r\n                        />\r\n                        <p className=''>{this.props.username}: {this.props.caption}</p>\r\n                        <FontAwesomeIcon icon={faTimes} className='report-close ml-auto'\r\n                                         onClick={this.props.handleDisableShowReport}/>\r\n                    </div>\r\n\r\n                    <form onSubmit={this.handleSubmit} className='report-form'>\r\n                        <textarea value={this.state.newReport}\r\n                                  onChange={this.handleNewReportChange}\r\n                                  className='report-form-textarea'\r\n                                  name=\"new-report\"\r\n                                  placeholder=\"Explain your reason for this report...\"/>\r\n                        <SubmitButton type='submit' text=\"Submit Report\" classes='report-form-btn'/>\r\n                        <div id={\"post-response-errors\"}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Reports;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {Avatar, Grid} from \"@material-ui/core\";\r\nimport Comments from './Comments';\r\nimport Reports from './Reports';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faComments, faExclamationCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport '../App.css';\r\n\r\n\r\nclass Feed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postData: [],\r\n            showCommentsModal: false,\r\n            showReportModal: false,\r\n            commentsModalState: {\r\n                postId: '',\r\n                postUsername: '',\r\n                postImage: '',\r\n                commentData: [],\r\n            },\r\n            reportModalState: {\r\n                postId: '',\r\n                postCaption: '',\r\n                postUsername: '',\r\n                postImage: '',\r\n            }\r\n\r\n\r\n        }\r\n        this.enableShowCommentsModal = this.enableShowCommentsModal.bind(this);\r\n        this.disableShowCommentsModal = this.disableShowCommentsModal.bind(this);\r\n        this.enableShowReportModal = this.enableShowReportModal.bind(this);\r\n        this.disableShowReportModal = this.disableShowReportModal.bind(this);\r\n        this.fetchPosts = this.fetchPosts.bind(this);\r\n    };\r\n\r\n    enableShowCommentsModal = (postId, postUsername, postImage, commentData) => {\r\n        const newCommentsModalState = {\r\n            ...this.state.commentsModalState, postId: postId, postUsername: postUsername,\r\n            postImage: postImage, commentData: commentData\r\n        };\r\n        this.setState({commentsModalState: newCommentsModalState});\r\n        this.setState({showCommentsModal: true});\r\n    }\r\n\r\n    disableShowCommentsModal = () => {\r\n        this.setState({showCommentsModal: false});\r\n    }\r\n\r\n    enableShowReportModal = (postId, postUsername, postImage, postCaption) => {\r\n        const newReportModalState = {\r\n            ...this.state.reportModalState, postId: postId, postUsername: postUsername,\r\n            postImage: postImage, postCaption: postCaption\r\n        };\r\n        this.setState({reportModalState: newReportModalState});\r\n        this.setState({showReportModal: true});\r\n    }\r\n\r\n    disableShowReportModal = () => {\r\n        this.setState({showReportModal: false});\r\n    }\r\n\r\n    fetchPosts() {\r\n        fetch('/api/feed/', {\r\n            method: 'GET',\r\n            headers: {'content-type': 'application/json'}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({postData: data})\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts()\r\n    }\r\n\r\n    render() {\r\n        const posts = this.state.postData\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    id=\"feed-grid\"\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\">\r\n\r\n                    {posts.map((post, index) => {\r\n                        return (\r\n                            <Post id={post.id} username={post.username} caption={post.caption}\r\n                                  image={post.image} comments={post.comments}\r\n                                  handleEnableShowComments={this.enableShowCommentsModal}\r\n                                  handleEnableShowReport={this.enableShowReportModal}\r\n                                  key={index}/>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n                <Modal\r\n                    isOpen={this.state.showCommentsModal}\r\n                    contentLabel=\"Post Comments Section\"\r\n                    shouldCloseOnOverlayClick={true}\r\n                    shoudCloseOnEsc={true}\r\n                    className='modal-container'\r\n                    onRequestClose={this.disableShowCommentsModal}\r\n                >\r\n                    <Comments id={this.state.commentsModalState.postId}\r\n                              username={this.state.commentsModalState.postUsername}\r\n                              image={this.state.commentsModalState.postImage}\r\n                              comments={this.state.commentsModalState.commentData}\r\n                              handleDisableShowComments={this.disableShowCommentsModal}\r\n                    />\r\n                </Modal>\r\n\r\n                <Modal\r\n                    isOpen={this.state.showReportModal}\r\n                    contentLabel=\"Post Report Section\"\r\n                    shouldCloseOnOverlayClick={true}\r\n                    shoudCloseOnEsc={true}\r\n                    className='modal-container'\r\n                    onRequestClose={this.disableShowReportModal}\r\n                >\r\n                    <Reports id={this.state.reportModalState.postId}\r\n                            caption={this.state.reportModalState.postCaption}\r\n                            username={this.state.reportModalState.postUsername}\r\n                            image={this.state.reportModalState.postImage}\r\n                            handleDisableShowReport={this.disableShowReportModal}\r\n                    />\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Post({id, username, caption, image, comments, handleEnableShowComments, handleEnableShowReport, index}) {\r\n\r\n    return (\r\n        <div className=\"post-card\" key={index}>\r\n            <div className=\"post-header\">\r\n                <Avatar\r\n                    className=\"post-avatar\"\r\n                    alt={username}\r\n                    src=\"\"\r\n                />\r\n                <p className=\"post-username\">{username}</p>\r\n                <FontAwesomeIcon icon={faExclamationCircle} className='post-report-button ml-auto'\r\n                                 onClick={() => handleEnableShowReport(id, username, image, caption)}/>\r\n            </div>\r\n            <img className=\"post-image\" src={image} alt=\"\"/>\r\n            <div className='post-bottom-section'>\r\n                <p className='post-text mr-auto'><strong>{username}:</strong> {caption}</p>\r\n                <FontAwesomeIcon icon={faComments} className='post-comments-button ml-auto'\r\n                                 onClick={() => handleEnableShowComments(id, username, image, comments)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n\r\n\r\n","import React from \"react\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport '../App.css';\r\nimport {getCookie} from \"../GlobalFunctions\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\n\r\nclass ReportsAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({newReport: \"\"})\r\n        this.dismissReport = this.dismissReport.bind(this);\r\n    };\r\n\r\n    deletePost = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('id', this.props.id);\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch('/api/feed/', {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(Object.fromEntries(formData)),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return this.push('/');\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList/>, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    dismissReport = (id) => {\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch('/api/report/', {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(Object.fromEntries(formData)),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return this.props.history.push('/');\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList/>, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"report-card\">\r\n\r\n                <img className=\"report-image\" src={this.props.image} alt=\"\"/>\r\n\r\n                <div className='report-content'>\r\n                    <div className=\"report-header\">\r\n                        <SubmitButton type='submit' text=\"Delete Post\" classes='report-form-btn'\r\n                                      onClick={this.deletePost}/>\r\n                    </div>\r\n\r\n\r\n                    <div id='reports-report-container'>\r\n                        {this.props.reports.map((reports) => {\r\n                            return (\r\n                                <Report id={reports.id} report={reports.content} username={reports.username}\r\n                                        handleDismissReport={this.dismissReport}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Report({report, username, id, handleDismissReport}) {\r\n\r\n    return (\r\n        <div className='report-box'>\r\n            <Avatar\r\n                className=\"report-avatar\"\r\n                alt={username}\r\n                src=\"\"\r\n            />\r\n            <div className='mr-auto'>\r\n                <p className='report-box-username'>{username}</p>\r\n                <p className='report-box-text'>Content: {report}</p>\r\n                <SubmitButton type='submit' text=\"Dismiss\" classes='report-form-btn'\r\n                              onClick={() => handleDismissReport(id)}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportsAdmin;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {Avatar, Grid} from \"@material-ui/core\";\r\nimport ReportsAdmin from './ReportsAdmin';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faExclamationCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport '../App.css';\r\n\r\nclass ReportFeed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postData: [],\r\n            showReportsModal: false,\r\n            reportsModalState: {\r\n                postId: '',\r\n                postUsername: '',\r\n                postImage: '',\r\n                reportData: [],\r\n            },\r\n            isError: false,\r\n            errors: '',\r\n        }\r\n\r\n        this.enableShowReportsModal = this.enableShowReportsModal.bind(this);\r\n        this.disableShowReportsModal = this.disableShowReportsModal.bind(this);\r\n        this.fetchPosts = this.fetchPosts.bind(this);\r\n    };\r\n\r\n    enableShowReportsModal = (postId, postUsername, postImage, reportData) => {\r\n        const newReportsModalState = {\r\n            ...this.state.reportsModalState, postId: postId, postUsername: postUsername,\r\n            postImage: postImage, reportData: reportData\r\n        };\r\n        this.setState({reportsModalState: newReportsModalState});\r\n        this.setState({showReportsModal: true});\r\n    }\r\n\r\n    disableShowReportsModal = () => {\r\n        this.setState({showReportsModal: false});\r\n    }\r\n\r\n    fetchPosts() {\r\n        fetch('/api/report/', {\r\n            method: 'GET',\r\n            headers: {'content-type': 'application/json'}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.errors === null || data.errors === undefined) {\r\n                    this.setState({postData: data})\r\n                } else {\r\n                    this.setState({isError: true});\r\n                    this.setState({errors: data.errors});\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts()\r\n    }\r\n\r\n    render() {\r\n        const posts = this.state.postData\r\n        if (this.state.isError) {\r\n            return (<h1>{this.state.errors}</h1>)\r\n        } else {\r\n            return (\r\n                <div>\r\n\r\n                    <Grid\r\n                        id=\"feed-grid\"\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"center\">\r\n\r\n                        {posts.map((post, index) => {\r\n                            return (\r\n                                <Post id={post.id} username={post.username} caption={post.caption}\r\n                                      image={post.image} report={post.reports}\r\n                                      handleEnableShowReports={this.enableShowReportsModal}\r\n                                      key={index}/>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                    <Modal\r\n                        isOpen={this.state.showReportsModal}\r\n                        contentLabel=\"Post Reports Section\"\r\n                        shouldCloseOnOverlayClick={true}\r\n                        shoudCloseOnEsc={true}\r\n                        className='modal-container'\r\n                        onRequestClose={this.disableShowReportsModal}\r\n                    >\r\n                        <ReportsAdmin id={this.state.reportsModalState.postId}\r\n                                      username={this.state.reportsModalState.postUsername}\r\n                                      image={this.state.reportsModalState.postImage}\r\n                                      reports={this.state.reportsModalState.reportData}\r\n                                      handleDisableShowReports={this.disableShowReportsModal}\r\n                        />\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction Post({id, username, caption, image, report, handleEnableShowReports, index}) {\r\n    return (\r\n        <div className=\"post-card\" key={index}>\r\n            <div className=\"post-header\">\r\n                <Avatar\r\n                    className=\"post-avatar\"\r\n                    alt={username}\r\n                    src=\"\"\r\n                />\r\n                <p className=\"post-username\">{username}</p>\r\n            </div>\r\n            <img className=\"post-image\" src={image} alt=\"\"/>\r\n            <div className='post-bottom-section'>\r\n                <p className='post-text mr-auto'><strong>{username}:</strong> {caption}</p>\r\n                <FontAwesomeIcon icon={faExclamationCircle} className='post-reports-button ml-auto'\r\n                                 onClick={() => handleEnableShowReports(id, username, image, report)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportFeed;\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport {getCookie} from '../GlobalFunctions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction PostForm() {\r\n    const [image, setImage] = useState(\"\");\r\n    const [isUploaded, setIsUploaded] = useState(false);\r\n    const [caption, setCaption] = useState(\"\");\r\n\r\n    function handleImageChange(e) {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                setImage(e.target.result);\r\n                setIsUploaded(true);\r\n            };\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function handleCaptionChange(e) {\r\n        setCaption(e.target.value);\r\n    }\r\n\r\n    // Because this is a functional component, the props are not initially available as in other components (ex: LoginForm),\r\n    // so we set the history using 'react-router-dom's useHistory() and then push using that object in the .then() promise\r\n    let history = useHistory();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n        formData.append('caption', caption);\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch(\r\n            '/api/post/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(Object.fromEntries(formData)),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return history.push('/feed');\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById(\"post-response-errors\");\r\n                ReactDOM.render(<ErrorsList />, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'post-form-main'}>\r\n            <h3>Make a Post</h3>\r\n            <div className={'box-upload'}>\r\n                {!isUploaded ?\r\n                    (<>\r\n                        <label className={'img-label'} htmlFor=\"upload-input\">\r\n                            <img style={{width: 100}} draggable={false}\r\n                                 src='https://wayou.gallerycdn.vsassets.io/extensions/wayou/vscode-icons-mac/7.25.3/1564717968649/Microsoft.VisualStudio.Services.Icons.Default'\r\n                                 alt=\"Folder Icon\"/>\r\n                            <p id={'sub'}>\r\n                                Click to upload image\r\n                            </p>\r\n                        </label>\r\n                        <input\r\n                            className={'img-input'}\r\n                            id=\"upload-input\"\r\n                            type=\"file\"\r\n                            accept=\".jpg, .img, .png\"\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </>) : (\r\n                        <div className={'image-preview'}>\r\n                            <img className='close-icon'\r\n                                 src='https://cdn.iconscout.com/icon/free/png-256/close-1781207-1518581.png'\r\n                                 alt=\"Close Icon\"\r\n                                 onClick={() => {\r\n                                     setIsUploaded(false);\r\n                                     setImage(null);\r\n                                 }}\r\n                            />\r\n                            <img id=\"uploaded-image\"\r\n                                 src={image}\r\n                                 alt=\"Feed Post\"\r\n                                 draggable={false}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={'text-area'}>\r\n                <textarea value={caption} onChange={handleCaptionChange} type=\"text\" name=\"caption\"\r\n                          className={'description-input'} placeholder='Description'/>\r\n            </div>\r\n            <input className={'post-btn'} type=\"submit\" value=\"Post\"/>\r\n            <div id={\"post-response-errors\"}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm","import React, {useState} from 'react'\r\nimport {getCookie} from \"../GlobalFunctions\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nclass FollowFinder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {followUserData: []};\r\n        this.fetchFollowUsers = this.fetchFollowUsers.bind(this);\r\n    }\r\n\r\n    fetchFollowUsers() {\r\n        fetch('/api/follow/', {\r\n            method: 'GET',\r\n            headers: {'content-type': 'application/json'}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({followUserData: data,})\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchFollowUsers()\r\n    }\r\n\r\n    render() {\r\n        const users = this.state.followUserData\r\n        return (\r\n            <div className='user-grid'>\r\n                {users.map((data, index) =>\r\n                    <FollowNode username={data.username}/>)\r\n                }\r\n                <div id='post-response-errors' className='display-none' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction FollowNode({username}) {\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [text, setText] = useState(\"Follow\");\r\n    const [classes, setClasses] = useState('follow-node');\r\n\r\n    function handleClick() {\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        const formData = new FormData();\r\n        formData.append('user_to_follow', username);\r\n\r\n        fetch(\r\n            '/api/follow/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(Object.fromEntries(formData)),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    setIsDisabled(true);\r\n                    setText(\"Following!\");\r\n                    setClasses(classes.concat(' follow-node-clicked'))\r\n                    return;\r\n                }\r\n                const ErrorsList = () => (\r\n                    <ul>{data.errors.map(error => <li key={error}> {error} </li>)}</ul>\r\n                );\r\n                const rootElement = document.getElementById('post-response-errors');\r\n                rootElement.classList.remove('display-none');\r\n                ReactDOM.render(<ErrorsList />, rootElement);\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <p>{username}</p>\r\n            <button\r\n                onClick={handleClick} disabled={isDisabled}\r\n                className={'follow-button'}>{text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FollowFinder;\r\n","import React from 'react';\r\nimport SubmitButton from './SubmitButton';\r\nimport {getCookie} from \"../GlobalFunctions\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction LogoutForm() {\r\n\r\n    let history = useHistory();\r\n\r\n    function submitLogout(e) {\r\n\r\n        const csrftoken = getCookie('csrftoken')\r\n\r\n        fetch('/api/logout/', {\r\n                method: 'POST',\r\n                body: '',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success === 'true') {\r\n                    return history.push('/login');\r\n                } else {\r\n                    return history.push('/feed');\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <SubmitButton onClick={() => submitLogout()} text=\"Logout\"/>\r\n    )\r\n}\r\n\r\nexport default LogoutForm","import React, {useLayoutEffect} from 'react';\r\nimport SubmitButton from './SubmitButton';\r\nimport LogoutForm from './LogoutForm';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {getIsAuthenticated} from \"../GlobalFunctions\";\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n    const location = useLocation()\r\n\r\n    useLayoutEffect(() => {\r\n        getIsAuthenticated((data => {\r\n            props.setIsAuthenticated(data);\r\n        }));\r\n    }, [location, props]);\r\n\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div className=\"navbar\">\r\n                <Link to=\"/feed\" className=\"logo mr-auto\">\r\n                    SnowFlake\r\n                </Link>\r\n                {props.isAuthenticated ? (\r\n                    <div className=\"user-status ml-auto\">\r\n                        <Link to=\"/post\">\r\n                            <SubmitButton text='New Post'/>\r\n                        </Link>\r\n                        <Link to=\"/follow\">\r\n                            <SubmitButton text='Follow Finder'/>\r\n                        </Link>\r\n                        <LogoutForm/>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"user-status ml-auto\">\r\n                        <Link to=\"/login\">\r\n                            <SubmitButton text='Login'/>\r\n                        </Link>\r\n                        <Link to=\"/register\">\r\n                            <SubmitButton text='Register'/>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.props.isAuthenticated !== nextProps.isAuthenticated) {\r\n            this.setState({isAuthenticated: nextProps.isAuthenticated});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, redirect, ...props} = this.props;\r\n        return (\r\n            isAuthenticated ?\r\n                <Route\r\n                    {...props}\r\n                /> :\r\n                <Redirect to={redirect}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {useCallback, useState} from 'react';\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm';\r\nimport RegisterForm from './components/RegisterForm';\r\nimport Feed from './components/Feed';\r\nimport ReportFeed from \"./components/ReportFeed\";\r\nimport PostForm from './components/PostForm';\r\nimport FollowFinder from './components/FollowFinder';\r\nimport Navbar from './components/Navbar';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n\r\n    const wrapperSetIsAuthenticated = useCallback(auth => {\r\n        setIsAuthenticated(auth);\r\n    }, [setIsAuthenticated, ]);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <Navbar isAuthenticated={isAuthenticated} setIsAuthenticated={wrapperSetIsAuthenticated}/>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <ProtectedRoute path=\"/login\" component={LoginForm} isAuthenticated={!isAuthenticated} redirect={'/feed'} />\r\n                        <ProtectedRoute path=\"/register\" component={RegisterForm} isAuthenticated={!isAuthenticated} redirect={'/feed'} />\r\n                        <ProtectedRoute path=\"/feed\" component={Feed} isAuthenticated={isAuthenticated} redirect={'/login'} />\r\n                        <ProtectedRoute path=\"/post\" component={PostForm} isAuthenticated={isAuthenticated} redirect={'/login'}  />\r\n                        <ProtectedRoute path=\"/follow\" component={FollowFinder} isAuthenticated={isAuthenticated} redirect={'/login'}  />\r\n                        <ProtectedRoute path=\"/report\" component={ReportFeed} isAuthenticated={isAuthenticated} redirect={'/login'}  />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Router>\r\n          <App />\r\n      </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}